"""empty message

Revision ID: a8f9337153a4
Revises: 15717f7181a4
Create Date: 2021-04-30 03:20:59.619087

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a8f9337153a4'
down_revision = '15717f7181a4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_stock_splits_id', table_name='stock_splits')
    op.drop_table('stock_splits')
    op.drop_index('ix_stock_dividents_id', table_name='stock_dividents')
    op.drop_table('stock_dividents')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stock_dividents',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('vendor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ticker', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('exDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('paymentDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('recordDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('amount', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.compositeFigi'], name='stock_dividents_company_id_fkey'),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], name='stock_dividents_unique_id_fkey'),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], name='stock_dividents_vendor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='stock_dividents_pkey')
    )
    op.create_index('ix_stock_dividents_id', 'stock_dividents', ['id'], unique=False)
    op.create_table('stock_splits',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('vendor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ticker', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('exDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('paymentDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('declaredDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('ratio', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('tofactor', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.compositeFigi'], name='stock_splits_company_id_fkey'),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], name='stock_splits_unique_id_fkey'),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], name='stock_splits_vendor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='stock_splits_pkey')
    )
    op.create_index('ix_stock_splits_id', 'stock_splits', ['id'], unique=False)
    # ### end Alembic commands ###
